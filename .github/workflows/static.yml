# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just uploading static files
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Prepare web assets only
        run: |
          # Create deployment directory with only web assets
          mkdir -p _site
          
          # Copy only the files needed for the web dashboard
          cp index.html _site/
          cp -r assets/ _site/assets/
          cp .nojekyll _site/
          
          # Copy any other static files that might be needed
          if [ -f favicon.ico ]; then cp favicon.ico _site/; fi
          if [ -f robots.txt ]; then cp robots.txt _site/; fi
          
          # List what we're deploying
          echo "Files being deployed:"
          find _site -type f | head -20
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload only the prepared web assets
          path: '_site'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 