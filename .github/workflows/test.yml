name: Essential Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  essential-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Check critical files exist
      run: |
        echo "✓ Checking critical files..."
        test -f index.html
        test -f cors_proxy.py
        test -f scripts/generate_dashboard.sh
        test -f run_with_cors.sh
    
    - name: Check script permissions
      run: |
        echo "✓ Checking script permissions..."
        test -x scripts/generate_dashboard.sh
        test -x run_with_cors.sh
        test -x test_locally.sh
    
    - name: Validate Python syntax
      run: |
        echo "✓ Validating Python syntax..."
        python3 -m py_compile cors_proxy.py
    
    - name: Validate dashboard HTML
      run: |
        echo "✓ Validating HTML for GitHub Pages..."
        # Check for absolute paths that would break on GitHub Pages
        if grep -E 'href="/|src="/' index.html; then
          echo "ERROR: Found absolute paths in index.html"
          exit 1
        fi
        
        # Check for GitHub Pages detection code
        if ! grep -q "window.location.hostname" index.html; then
          echo "WARNING: GitHub Pages detection not found"
        fi
    
    - name: Test dashboard generation (dry run)
      env:
        ELASTIC_COOKIE: "test-cookie"
      run: |
        echo "✓ Testing dashboard generation script..."
        # Just check syntax, don't actually run
        bash -n scripts/generate_dashboard.sh
    
    - name: Quick Python tests
      run: |
        # Only run if test files exist
        if [ -f "tests/requirements.txt" ]; then
          pip install -r tests/requirements.txt
          # Only test critical components
          python -m pytest tests/test_cors_proxy.py::test_cors_headers -v || true
          python -m pytest tests/test_github_pages_integration.py::test_critical_files_exist -v || true
        else
          echo "Skipping Python tests (no requirements.txt)"
        fi 